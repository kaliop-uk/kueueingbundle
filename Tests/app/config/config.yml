# Configuration file used for running tests

framework:
    secret: "ThisIsNotSoSecretSoWeTestIt"

services:
    # enable the accumulator listener
    kaliop_queueing.message_consumer.filter.accumulator:
        class: '%kaliop_queueing.message_consumer.filter.accumulator.class%'
        tags:
             - { name: kaliop_queueing.event_listener, event: kaliop_queueing.message_consumed }

    # make public (via aliases) all the services which are private in sf 3.4->4.0, for ease of testing
    test_alias.kaliop_queueing.event_dispatcher:
        alias: 'kaliop_queueing.event_dispatcher'
        public: true
    test_alias.kaliop_queueing.amqp.queue_manager:
        alias: 'kaliop_queueing.amqp.queue_manager'
        public: true
    test_alias.kaliop_queueing.message_consumer.console_command:
        alias: 'kaliop_queueing.message_consumer.console_command'
        public: true
    test_alias.kaliop_queueing.message_consumer.symfony_service:
        alias: 'kaliop_queueing.message_consumer.symfony_service'
        public: true
    test_alias.kaliop_queueing.message_producer.http_request:
        alias: 'kaliop_queueing.message_producer.http_request'
        public: true
    test_alias.kaliop_queueing.message_consumer.http_request:
        alias: 'kaliop_queueing.message_consumer.http_request'
        public: true
    test_alias.kaliop_queueing.message_producer.xmlrpc_call:
        alias: 'kaliop_queueing.message_producer.xmlrpc_call'
        public: true
    test_alias.kaliop_queueing.message_consumer.xmlrpc_call:
        alias: 'kaliop_queueing.message_consumer.xmlrpc_call'
        public: true
    test_alias.kaliop_queueing.message_producer.generic_message:
        alias: 'kaliop_queueing.message_producer.generic_message'
        public: true
    test_alias.kaliop_queueing.message_consumer.noop:
        alias: 'kaliop_queueing.message_consumer.noop'
        public: true
    test_alias.kaliop_queueing.message_consumer.console_command.filter:
        alias: 'kaliop_queueing.message_consumer.console_command.filter'
        public: true
    test_alias.kaliop_queueing.message_consumer.symfony_service.filter:
        alias: 'kaliop_queueing.message_consumer.symfony_service.filter'
        public: true
    test_alias.kaliop_queueing.message_consumer.http_request.filter:
        alias: 'kaliop_queueing.message_consumer.http_request.filter'
        public: true
    test_alias.kaliop_queueing.message_consumer.filter.monitor:
        alias: 'kaliop_queueing.message_consumer.filter.monitor'
        public: true
    test_alias.kaliop_queueing.message_consumer.filter.stopwatch:
        alias: 'kaliop_queueing.message_consumer.filter.stopwatch'
        public: true
    test_alias.kaliop_queueing.message_consumer.filter.accumulator:
        alias: 'kaliop_queueing.message_consumer.filter.accumulator'
        public: true

old_sound_rabbit_mq:
    connections:
        default:
            host:     'localhost'
            port:     5672
            user:     'guest'
            password: 'guest'
            vhost:    '/'
            lazy:     false
    producers:
        travis_test:
            connection: default
            exchange_options:
                name: kaliop_queueing.travis_test.exchange
                type: topic
    consumers:
        travis_test:
            connection: default
            exchange_options:
                name: kaliop_queueing.travis_test.exchange
                type: topic
            queue_options:
                name: kaliop_queueing.travis_test.default_queue
                routing_keys: [ '#' ]
            callback: kaliop_queueing.message_consumer.noop
        travis_test_hellodotstar:
            connection: default
            exchange_options:
                name: kaliop_queueing.travis_test.exchange
                type: topic
            queue_options:
                name: kaliop_queueing.travis_test.hellodotstar
                routing_keys: [ 'hello.*' ]
            callback: kaliop_queueing.message_consumer.noop
        travis_test_stardotworld:
            connection: default
            exchange_options:
                name: kaliop_queueing.travis_test.exchange
                type: topic
            queue_options:
                name: kaliop_queueing.travis_test.stardotworld
                routing_keys: [ '*.world' ]
            callback: kaliop_queueing.message_consumer.noop
        travis_test_hellodothash:
            connection: default
            exchange_options:
                name: kaliop_queueing.travis_test.exchange
                type: topic
            queue_options:
                name: kaliop_queueing.travis_test.hellodothash
                routing_keys: [ 'hello.#' ]
            callback: kaliop_queueing.message_consumer.noop
        travis_test_hashdotworld:
            connection: default
            exchange_options:
                name: kaliop_queueing.travis_test.exchange
                type: topic
            queue_options:
                name: kaliop_queueing.travis_test.hashdotworld
                routing_keys: [ '#.world' ]
            callback: kaliop_queueing.message_consumer.noop
        travis_test_hellodotworld:
            connection: default
            exchange_options:
                name: kaliop_queueing.travis_test.exchange
                type: topic
            queue_options:
                name: kaliop_queueing.travis_test.hellodotworld
                routing_keys: [ 'hello.world' ]
            callback: kaliop_queueing.message_consumer.noop
        travis_test_bonjourdotmonde:
            connection: default
            exchange_options:
                name: kaliop_queueing.travis_test.exchange
                type: topic
            queue_options:
                name: kaliop_queueing.travis_test.bonjourdotmonde
                routing_keys: [ 'bonjour.monde' ]
            callback: kaliop_queueing.message_consumer.noop
