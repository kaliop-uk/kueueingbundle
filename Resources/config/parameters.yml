parameters:
    # Take control of the rabbitmq producer and consumer classes so we can extend them a bit for our needs
    # You normally do not need to change these.
    old_sound_rabbit_mq.producer.class: Kaliop\QueueingBundle\Adapter\RabbitMq\Producer
    old_sound_rabbit_mq.consumer.class: Kaliop\QueueingBundle\Adapter\RabbitMq\Consumer

    # Used when no driver is specified, f.e. on the command line
    kaliop_queueing.default.driver: rabbitmq

    # To be configured in a bundle depending on this one (or in the application):
    # worker processes to be monitored via watchdog console command
    kaliop_queueing.default.workers.list: {}
        # Example definition:
        # just a unique name
        #hello:
            # as configured in rabbitmq.yml
            #queue_name: 'test'
            # valid options: m, r, l, d. @see  php console help rabbitmq:consumer for details
            #options: { }


    # To be configured in a bundle depending on this one (or in the application):
    # the Sf console commands which we allow to execute via queue messages
    # If you want to use a regexp, start it with regexp:
    kaliop_queueing.default.allowed_commands:
        - kaliop_queueing:echoback
        ###
        # IMPORTANT!!! you should probably disable this in production for security reasons
        ###
        - regexp:/.*/

    # Can be set to either 'true' or 'false' for forcing a value. 'null' means: let the Symfony Process Component decide
    kaliop_queueing.default.console_commands.force_sigchild_enabled: null

    # To be configured in a bundle depending on this one (or in the application):
    # the Sf services which we allow to execute via queue messages. For each, the allowed php methods as an array
    # If you want to use a regexp, start it with regexp:
    kaliop_queueing.default.allowed_services:
        # example service we allow to be used: the logger
            logger:
                - log
        # another example: the mailer
        #mailer:
        #    - send
        ###
        # IMPORTANT!!! you should most likely disable this in production for security reasons
        ###
        #    regexp:/.*/

    # To be configured in a bundle depending on this one (or in the application):
    # the servers which we allow to send http requests to, as an array of server names.
    # If you want to use a regexp, start it with regexp: - it will match the full url then instead of just the server name
    kaliop_queueing.default.allowed_urls: []

    # UNUSED at the moment
    kaliop_queueing.default.available_xmlrpc_servers:
        demo:
            url:
            options: { }
